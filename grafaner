#!/usr/bin/env ruby

require "yaml"
require "json"

def error(message)
  puts message
  exit(1)
end

def create_dashboard(dashboard)
  json_template = dashboard.to_json

  token  = File.read("~/.grafaner/token")
  server = File.read("~/.grafaner/server")

  File.write("/tmp/grafana-template", json_template)

  headers = [
    "-H \"Content-Type: application/json\"",
    "-H \"Authorization: Bearer #{token}\""
  ].join(" ")

  `curl #{headers} -X POST --data /tmp/grafana-template #{server}/api/dashboards/db`
end

def load_template_file
  template_path = ARGV[0]

  error "Template file not found" unless File.exists?(template_path)

  template = File.read(template_path)

  YAML.load(template)
end

def validate_template(template)
  error "Title can't be empty" if template["title"].nil? || template["title"].strip == ""
end

def constuct_dashboard_json(template)
  {
    "dashboard" => {
      "title" => template["title"],
      "originalTitle" => template["title"],
      "tags": [],
      "style": "dark",
      "timezone": "browser",
      "editable": true,
      "hideControls": false,
      "sharedCrosshair": false,
      "time" => {
        "from" => "now-6h", "to" => "now"
      },
      "timepicker" => {
        "refresh_intervals" => [
          "5s", "10s", "30s", "1m", "5m", "15m", "30m", "1h", "2h", "1d"
        ],
        "time_options": [
          "5m", "15m", "1h", "6h", "12h", "24h", "2d", "7d", "30d"
        ]
      },
      "templating" => {
        "list" => []
      },
      "annotations" => {
        "list" => []
      },
      "schemaVersion" => 6,
      "version" => 2
    },
    "overwrite" => false
  }
end

template  = load_template_file

validate_template(template)
dashboard = constuct_dashboard_json(template)

p dashboard
